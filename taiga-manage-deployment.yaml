apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\i340544\Downloads\kompose-windows-amd64.exe -f .\docker-compose.yml
      -f .\docker-compose-inits.yml convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: taiga-manage
  name: taiga-manage
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: taiga-manage
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\i340544\Downloads\kompose-windows-amd64.exe -f .\docker-compose.yml
          -f .\docker-compose-inits.yml convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/taiga: "true"
        io.kompose.service: taiga-manage
    spec:
      containers:
      - command:
        - python
        - manage.py
        env:
        - name: CELERY_ENABLED
          value: "False"
        - name: POSTGRES_DB
          value: taiga
        - name: POSTGRES_HOST
          value: taiga-db
        - name: POSTGRES_PASSWORD
          value: taiga
        - name: POSTGRES_USER
          value: taiga
        - name: RABBITMQ_PASS
          value: taiga
        - name: RABBITMQ_USER
          value: taiga
        - name: TAIGA_SECRET_KEY
          value: taiga-back-secret-key
        image: taigaio/taiga-back:latest
        imagePullPolicy: ""
        name: taiga-manage
        resources: {}
        volumeMounts:
        - mountPath: /taiga-back/static
          name: taiga-static-data
        - mountPath: /taiga-back/media
          name: taiga-media-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: taiga-static-data
        persistentVolumeClaim:
          claimName: taiga-static-data
      - name: taiga-media-data
        persistentVolumeClaim:
          claimName: taiga-media-data
status: {}
